---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtONTFtdFU1aEhsbkZLSStMZTdLN3d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRBd056RTNNVEV4TVZvWERUSTNNVEF3TnpFMwpNVEV4TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExYWNINWwreEV3VVdSMDh4SGlSZExaVnlRSlF6Q3M1V3ppTU8rUVFwQ3FKdElMVXgKbHorVnRzRmQ3TjlqbThnUEl1M0wyblBlaEpkNThkMm5KTXlUOFh1c1Zsem5zbkMzKy95MkY3RFJIMjMzbW9GYgp2QUk5UklCOGpRaDA4aU43VmdRaythbEl5UE1ETXNHRE5qYzNQb3E5dG9MOTZSV3FsR3o4ZkV1Z2QxK0tWaXJqClZLaTlEU2Q1d1drMTdpc1V0ZXdCdjhoWm9kU1J6TlJ1ZGRXZHM2ZUM2ZzJ5ZU9YaDh0K01jcjlEazZza0lNVSsKRi9KekxvTFg5T2VGTkhFeE9DL0laVW02VUduR2E1TlQ4ZnRlTENuRjk0UFZiUm83TkRNS0dxNEgwU1hyb3JHOApBb2g0ZTl2cWM1SzdnRGkweXVFT1lpaVhyRW1tWExHR0YxVnlWd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSFdkVkoydi90ZEF0Z0hhYzhjMHhQYVRNYUYxTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQXNoUE1qTGVoV05qcTkxMlJzWWZPbS9ya0pHQnFndHQ3YldJNFpiUXltTFptbEVPKzk3eVpNCmFYbTJVWlZiaERSRTlQMldnc2s5a1RTOEFpdDBoWWVYTFY2K0dialBaM1ZHZGFDZC9xdW50cU94dG1BRFV1TG4KS2RXeDJUcit4ODNHMHphRnUwdTZLcmd5WjE2RDg2UnozelRNME5hNHpPMjBvWk91d0d3bmN4eVUvelFaSUlIWApHWHNKUEQ2ckJyNlhyUGRNbGpka3dnNEpPTUFwRlczWnZSWkk0dFRPL2VodVVhWXN3a2IvbUc2RVFDc2JzSlFpCkljWGFabU9Cd0hRTko2NEpkeEtRSUJBSmJxQ1l4eElXaGhMWjJyT3p2V0FTazc3ek15T0xVR3k3QUJCb3VnN24KaXpTSU5hRzZZNnE2TFRuVWxtTDFCdE1RMnhGWm03UFMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMWFjSDVsK3hFd1VXUjA4eEhpUmRMWlZ5UUpRekNzNVd6aU1PK1FRcENxSnRJTFV4Cmx6K1Z0c0ZkN045am04Z1BJdTNMMm5QZWhKZDU4ZDJuSk15VDhYdXNWbHpuc25DMysveTJGN0RSSDIzM21vRmIKdkFJOVJJQjhqUWgwOGlON1ZnUWsrYWxJeVBNRE1zR0ROamMzUG9xOXRvTDk2UldxbEd6OGZFdWdkMStLVmlyagpWS2k5RFNkNXdXazE3aXNVdGV3QnY4aFpvZFNSek5SdWRkV2RzNmVDNmcyeWVPWGg4dCtNY3I5RGs2c2tJTVUrCkYvSnpMb0xYOU9lRk5IRXhPQy9JWlVtNlVHbkdhNU5UOGZ0ZUxDbkY5NFBWYlJvN05ETUtHcTRIMFNYcm9yRzgKQW9oNGU5dnFjNUs3Z0RpMHl1RU9ZaWlYckVtbVhMR0dGMVZ5VndJREFRQUJBb0lCQURsVEI1dVlNVHFaTXRFUApQbTZIOHpnMzBOL2k0NDhTcmRmQk1GTS8rb01QOFpmRkJmays1anlTeFZDNDMxRDg3SkxDbXQrU0Z6SWNNbXZpCnZPWHl2ZjhjMzdDTVhONVR3QW1zVkc4bTBmVk0zQkpvZ3VSKzlWRmI2QTh2SmJHU001VndwenNWWUtJS0VlR2MKYWtneHFIRHZhTmQvYmdFTC95aXoxVXJFUDluSEd3RW50WnlhTUpNYmdjWFFFeWNVbSt3MlBHN1k1YU9IcGE4Ygozbk9LWGV6dDZLQjkxWjMvYmZaa1hWT0lZdS8yZzVtN2FCSFlFaFQ4SVBwZlFMRFFRWlh5MDZod09BNTNJV1d2CnUvM0cveXRXWXpwS1J5SVdyeGxnN3VKYVBaNzRta0pJRWFKeEJuVS9acDd1eUllL0djcEJDMzJUVzN1SUpNdVkKL1RSbmJJRUNnWUVBOVlHalErYWlrc3RUVXlQbXRkNnpqbkl5NWhIeEk4L29VZFowK0pHa2ZVSldnNmFWVytUdgpaUkFlUjJKUjJzWTl3aHcyenhBdXQ4Y2p1cW9GZ2JwbCt2YzJqY25udGJJb2NTeno3WUdXZHV3S01qODRBSGcxClNMOXQwQVI5U01aZWZoOHduQ1BGZUFCVjE0WDd4d1loVWhjdTdqYWh0eElGSFZXS0dLMmhkZzBDZ1lFQTNzalgKNDJLYzZ1L2tKdy9iSHBaMVltRkdZRkp6Y20rcGZzSHdZbFZGbXFFaEtlb3BETXdIRmRlS1BmWUZxRVh6dktDagoxbjdMWEtQMk5IM2twZFdUTnFFYzlqRWJNb2E5ZmRLRndKOW5ncFk2Mmc3QXZ4ejkycklJYlExd1ZzakVRK1JmCmhqWFhtcGpKNjFwTEpDSmxLakhLZ0NrMjJPNko4a01OTmNkRzlQTUNnWUFWWVB1aHJ4VGJLWitRN3VCcFdBSlUKMWpiK2QvT0N4ZGthUDAyaVU3UjZQK3VldlVQbVk3SkJINzB6UkNtU25vN0VONGJDVTB0dUw0WTUvQkpNc0xtdQp1QlpsRkg3OEFJNnJCRm9kaFpwZnNzQlVqZExIbjdBc0xKZFlkUHVmK2I1Q3gxNkpTa2dvNGdhWHBSQSt6WmJiCk9pK1pDT0xlT1ZCK3RITTVJTzJkaFFLQmdRQ2IzVkpGY0ttdUtOV3Jpb2xYOWhYOEZXaGlYVzBOeEJlR2FuTWUKcU9BQWxmaVkxWTJRdVhHL2swUFJvNzFEaEdWSk0rNU1VL3M5UGkwemZseW90U3JBanFtdmlKMnBsT0VnRlZpawpjaUcrR0JMbW1tbTVpN1FDL0ltdW1qZGRVQ3NZQUwvZ0t1MUQ2TjlqL0pFVG44aTlZNFowY2VGQWxtc0dobWpJCmxqb0xod0tCZ0VIQTBEdVBBbFdTUDM1TG9vYnlVUUVnNFRJTUVqOFY2eWM2dytSMXVmWWVvak14bml5UWZBRHUKY3FPdGhxMk8xMmdHL21ERzNCSTVGTDc4RFdhR2FEd0tyNTFXUERwcU5pS255WDJRQ3gzZEhCQzhTTk9iRkpTMgo3YThNK3IwcE0zZlBSYkIwNyt1S1haSHc1V0N5YnI4b0l1c2NVUVE1RjBNcEhhYmJLdUw0Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtONTFtdFU1aEhsbkZLSStMZTdLN3d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTVRBd056RTNNVEV4TVZvWERUSTNNVEF3TnpFMwpNVEV4TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExYWNINWwreEV3VVdSMDh4SGlSZExaVnlRSlF6Q3M1V3ppTU8rUVFwQ3FKdElMVXgKbHorVnRzRmQ3TjlqbThnUEl1M0wyblBlaEpkNThkMm5KTXlUOFh1c1Zsem5zbkMzKy95MkY3RFJIMjMzbW9GYgp2QUk5UklCOGpRaDA4aU43VmdRaythbEl5UE1ETXNHRE5qYzNQb3E5dG9MOTZSV3FsR3o4ZkV1Z2QxK0tWaXJqClZLaTlEU2Q1d1drMTdpc1V0ZXdCdjhoWm9kU1J6TlJ1ZGRXZHM2ZUM2ZzJ5ZU9YaDh0K01jcjlEazZza0lNVSsKRi9KekxvTFg5T2VGTkhFeE9DL0laVW02VUduR2E1TlQ4ZnRlTENuRjk0UFZiUm83TkRNS0dxNEgwU1hyb3JHOApBb2g0ZTl2cWM1SzdnRGkweXVFT1lpaVhyRW1tWExHR0YxVnlWd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSFdkVkoydi90ZEF0Z0hhYzhjMHhQYVRNYUYxTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQXNoUE1qTGVoV05qcTkxMlJzWWZPbS9ya0pHQnFndHQ3YldJNFpiUXltTFptbEVPKzk3eVpNCmFYbTJVWlZiaERSRTlQMldnc2s5a1RTOEFpdDBoWWVYTFY2K0dialBaM1ZHZGFDZC9xdW50cU94dG1BRFV1TG4KS2RXeDJUcit4ODNHMHphRnUwdTZLcmd5WjE2RDg2UnozelRNME5hNHpPMjBvWk91d0d3bmN4eVUvelFaSUlIWApHWHNKUEQ2ckJyNlhyUGRNbGpka3dnNEpPTUFwRlczWnZSWkk0dFRPL2VodVVhWXN3a2IvbUc2RVFDc2JzSlFpCkljWGFabU9Cd0hRTko2NEpkeEtRSUJBSmJxQ1l4eElXaGhMWjJyT3p2V0FTazc3ek15T0xVR3k3QUJCb3VnN24KaXpTSU5hRzZZNnE2TFRuVWxtTDFCdE1RMnhGWm03UFMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRUlZJQm9mOE10dUh1RWFnVGFRK1ZZREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF4TURBM01UY3hNVEV4V2hjTk1qY3hNREEzTVRjeApNVEV4V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcnl4UlkyVEhRenlXZzdlanN3SUkKdWM0aW14RGVpaUZNNU5NWDl3UDJTVnhjLzhxTElEZGhLN2JISzJScmx5cUdvcG9Rd3JTRVFBTXNNM1R5TStwYQpLTXRoTFBUMFVacmFhVk1KaEhPUzhRWkhLZEE4OWVoUVFScnBNRVNFa2dQZzluMy92azlha0hncTBqUlJmbzh3CmQ2L2RPdFJRSC9NSUV6TnZTUzhRbDUvYlM4VFl1K2tXMkY5L1N6M29FQWF1SHRSMlNCbUk0OUM3YVVtVVNUbEsKN3NBQ3RTS1ZZMkhUSERTdEFraHZ4b3pSYkhac1BFdlZjditKbjg1M1ZGS0RhOVdHVnNDbmN6ZFRVSXlRMG5XaQplc3p0bTFYVjhyR1JFeTVORlZzRXBwdlNCc2xvNDE3WUdobGZYM093UDFtU1RkV2pWelNhQXQwT2UyejV4OFc5CkJ3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSMW5WU2RyLzdYUUxZQgoyblBITk1UMmt6R2hkVEFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBbTBGN3BaYWRCSCtOWWF1V1dhZit6RzZ3L1VOV1kKWEROeUZKZWpiZzBvV3NOMTVIMHY5ZWcwOGFwS3dIUytzanVFVHJ2U2FmaFkvdG9PZXhDMzdjRGxWVWE0UzhtaQp4VDhVMHIzTmozUEpGaFVRZ3NkckNGMlNQUUIwT1crdk9YRDE2TXhoZDFZcWltRGZkdzJ6d0xJTzZSSXV0Qlc2CjIzZko3TTExeE10ZnRTUVpVY0dJUlRkK3p2ZVVGVHpxUlJTOGc4M2drcDlFNjgyQTZmSEZRcWtrVUF1Z2JJby8KQ2o1bFFJemYxTkJqMmpFQlpxVHFZaVcwVUlJYVhjVjdnV3o1cWdoNnRoQ0dpaElMREkxdlpyUEdFU2o3ZWRWagptTkxyMHIydEtZSCthSEhRV2U3RGQyTXlreVlIUERuMXVSU0k4NllEcXZQVDB6STZSY3BCY29EVQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcnl4UlkyVEhRenlXZzdlanN3SUl1YzRpbXhEZWlpRk01Tk1YOXdQMlNWeGMvOHFMCklEZGhLN2JISzJScmx5cUdvcG9Rd3JTRVFBTXNNM1R5TStwYUtNdGhMUFQwVVpyYWFWTUpoSE9TOFFaSEtkQTgKOWVoUVFScnBNRVNFa2dQZzluMy92azlha0hncTBqUlJmbzh3ZDYvZE90UlFIL01JRXpOdlNTOFFsNS9iUzhUWQp1K2tXMkY5L1N6M29FQWF1SHRSMlNCbUk0OUM3YVVtVVNUbEs3c0FDdFNLVlkySFRIRFN0QWtodnhvelJiSFpzClBFdlZjditKbjg1M1ZGS0RhOVdHVnNDbmN6ZFRVSXlRMG5XaWVzenRtMVhWOHJHUkV5NU5GVnNFcHB2U0JzbG8KNDE3WUdobGZYM093UDFtU1RkV2pWelNhQXQwT2UyejV4OFc5QndJREFRQUJBb0lCQVFDZUxucmdNaVR0eGt4MApiT1BaeGNCemFIMC9ZYUJUUTNiWU92YXRERnJlTEJXZXRodWozOTVUUngzYlJUY1Nya2dkbE5vRnVGU2tLVGxFCnpobllYNHRDdzBUZy8rR1B2ekh6WWhSNkVwTmlLclVnUVBhTGFGandNWWpaR1VaTlJFdGt5cXFpQTY1WVB1c00KSGtwbzZveHR4OVVTUnA2RCswWVRjS0xSaHpxSWIwZEZ5QzF4WEMwTkJySjRURW9mVmNwVTNDT3B6WXN2TlpEWApNSVJRU2RzYWkzUHBiQ2NJdktCSElNRDFKTHphWVNOOWlIN092OGxoY2FsbFFPbTROUUwvUnkzRE5kN0ovNHNnCkpNWlZlcy9UT3N2VjhYZ1V2Ry9RblJPY0NadmJDVzZZOVJHS3JWVmN5bnR1YVI5MzE4bnNBRnRTeTFMSG53TzEKRFlZQmxOcEJBb0dCQU0wY3EwUXQ5UjBtTU1WTTgrMnJ5eG5TajlXeFRFSzdaQ3hLdGNRaEJUQms1NEZPcFdmSApaQ0lDY05aUkNFcnh0bTd6U29rZm1zR3NTSW93M1B3VGFkSk5IR3VEVksvajNLVlVnT1F1Qk11TGo1dnh5R0doCnNBZ3BLbCtVaDFqcHFSSzRRcm9ybjI4dVprNFJta2k3WWJrMUNiNGxhT1JaLy9ISDBhclpJTVZ2QW9HQkFOcWkKSWpOYktVc1JTQnpJQTY2b1JPR1VZSHVzVGUrYXRVUkRSWUJSSGJkTm5xYURCWVpqVHE3MHhET2Vqa3NrOWEyTwpzbFRESzl3YlVHVXB5am1lTGFwbnR6SnF3YklKV1QwVk9Od0dvWk92aVFxbG91czJ6b3BDWElCbTc2SVk4WWRzCnI5cG94L0NzQmt0MHd2aXEyZjRUR0FnejAzalBIUHNkcTJ2dnB5WHBBb0dBUWN5UXBLNlprMkJOQlA1S3dsUDYKTTY1NHRmVEtvaDI3WlBvU2xYaUNVYVFOSUU0NmdiQlZUeE81WHdkZndhc0krMDdRK214SkdSaExyUWsvMngzZgpOTGZJQmpWN1ZYR2p0dVlFOHk1UUczd0o5ZHo2aTFkelFTcnpqUFg0OVd6LzhDRnNSb3ozK0pMSi93Rm1uUzUvCml3cVl0WWNLdnphZ0JOQTFVcm1VNmNFQ2dZQWJ2Rm5PWGhBOC83SkFSSGVESHNHdVJGNkJFZmpKSHIxRUxheVIKZkxqaVdpeDRQMExpSzVMOXl2dGcrUXBnS2c0b3VHT1RNVGROTXdIZDg1RStBZjBWRXhkQWhCNlNjWEVxdUppQQpBUzlhUnZpQnEwV2h4VkFxWmdUS0hVVGxNWGppanowMzNmY1BaeU5kU3pDNHp5UGNnWnVZM3NwREZ6TThBQ1dSCkNkUVFrUUtCZ1FDYzNGS2hBM0Q4SmNPN3Joc1RxVjc1YlZ3MkovY0ZobUtXMHlRcDJzYlN2OS95eUxFSGFJSVAKSzNYYkZUQ3JSVVRsZWhFUnE3YkQ2OFRHU1BSMHpjd0d5SFg2VkUybVhZQldzbThySHRpa0ltbEFvVGJSQ1JjSwpNekUrNjJuTWdEYitvL0xlbzNPTlVGM05pWDRzTm95a0hOaGpKajg4RWYxbURsc2FsbjNOU3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-masquerade-to-route-source: "false"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  ipam-cilium-node-update-rate: "15s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"

  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"

  external-envoy-proxy: "false"
  max-connected-clusters: "255"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.15.6@sha256:6aa840986a3a9722cd967ef63248d675a87add7e1704740902d5d3162f0c0def"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.15.6@sha256:5789f0935eef96ad571e4f5565a8800d3a8fbb05265cf6909300cd82fd513c3d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
